!function(){"use strict";var e=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._nactiveButtonClass=e.inactiveButtonClass,this._inputInvalidClass=e.inputInvalidClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}disableButton(e){e.disabled=!0}enableButton(e){e.disabled=!1}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputInvalidClass)}_hideInputError(e){this._form.querySelector(`#${e.id}-error`).classList.remove(this._errorClass),e.classList.remove(this._inputInvalidClass)}checkInputValidity(e,t){e.validity.valid?this._hideInputError(e,t):this._showInputError(e,t)}_checkFormValidity=()=>this.inputElements.every((e=>e.validity.valid));_toggleButtonAbility=()=>{this._checkFormValidity()?this.enableButton(this.submitButton):this.disableButton(this.submitButton)};_setEventListeners(){this.inputElements=[...this._form.querySelectorAll(this._inputSelector)],this.submitButton=this._form.querySelector(this._submitButtonSelector),this.inputElements.forEach((e=>{e.addEventListener("input",(t=>{this.checkInputValidity(e),this._toggleButtonAbility(this.inputElements)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton(this.submitButton)})),this._setEventListeners()}},t=class{constructor(e,t,o){this.name=e.name,this.link=e.link,this.alt=e.alt,this._cardSelector=t,this._handleImageClick=o}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".gallery__card").cloneNode(!0)}_handleToggleLike(){this._likeButton.classList.toggle("gallery__like-button_clicked")}_handleDeleteCard(){this._element.remove()}_setEventListeners(){this._likeButton.addEventListener("click",(()=>this._handleToggleLike())),this._trashButton.addEventListener("click",(()=>this._handleDeleteCard())),this._cardPhoto.addEventListener("click",(()=>{this._handleImageClick({name:this.name,link:this.link})}))}getView(){return this._element=this._getTemplate(),this._cardPhoto=this._element.querySelector(".gallery__image"),this._likeButton=this._element.querySelector(".gallery__like-button"),this._trashButton=this._element.querySelector(".gallery__delete-button"),this._cardLabel=this._element.querySelector(".gallery__label"),this._cardPhoto.src=this.link,this._cardPhoto.alt=this.name,this._cardLabel.textContent=this.name,this._setEventListeners(),this._element}},o=class{constructor(e){this.modalSelector=document.querySelector(e)}open(){this.modalSelector.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this.modalSelector.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this.currentCloseButton=this.modalSelector.querySelector(".modal__close"),this.currentCloseButton.addEventListener("click",this.close.bind(this)),this.modalContainer=this.modalSelector.querySelector(".modal__container"),this.modalSelector.addEventListener("mousedown",(e=>{e.stopPropagation();let t=!1;(e.target===this.modalContainer||this.modalContainer.contains(e.target))&&(t=!0),!1===t&&this.close()}))}},s=class extends o{constructor(e){let{modalSelector:t,handleSubmitForm:o}=e;super(t),this._modalSelector=document.querySelector(t),this._modalForm=this._modalSelector.querySelector(".modal__form"),this._inputFields=this._modalForm.querySelectorAll(".modal__input"),this._handleSubmitForm=o}close(){this._modalForm.reset(),super.close()}_getInputValues(){const e=[...this._modalSelector.querySelectorAll(".modal__input")],t={};for(const o of e)t[o.name]=o.value;return t}setEventListeners(){this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this.data=this._getInputValues(),this._handleSubmitForm(this.data),this.close()})),super.setEventListeners()}};document.querySelector(".profile__title"),document.querySelector(".profile__subtitle");const n=document.querySelector("#title"),i=document.querySelector("#subtitle"),r=document.querySelector("#profile-edit-button"),l=document.querySelector("#modal__form-person"),a=document.querySelector("#modal__form-img"),c=document.querySelector("#profile-add-button"),d=new class extends o{constructor(e){super(e),this._boxPhoto=document.querySelector(".modal__box-photo"),this._boxTitle=document.querySelector(".modal__box-title")}open(e){this._boxPhoto.src=e.link,this._boxPhoto.alt=e.name,this._boxTitle.textContent=e.name,super.open()}setEventListeners(){super.setEventListeners()}}("#photo-modal"),u=e=>{d.open(e)};d.setEventListeners();let m="append";const h=e=>{const o=new t(e,"#card-template",u).getView();_.addItem(o,m)},_=new class{constructor(e,t){let{items:o,renderer:s}=e;this._items=o,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"append";"append"===t&&this._container.append(e),"prepend"===t&&this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:h},".gallery__grid");_.renderItems();const p=new class{constructor(e){let{profileNameSelector:t,profileJobSelector:o}=e;this._profileName=document.querySelector(t),this._profileJob=document.querySelector(o)}getUserInfo(){const e={name:"",job:""};return e.name=this._profileName.textContent,e.job=this._profileJob.textContent,e}setUserInfo(e,t){this._profileName.textContent=e,this._profileJob.textContent=t}}({profileNameSelector:".profile__title",profileJobSelector:".profile__subtitle"}),b=new s({modalSelector:"#profile-edit-modal",handleSubmitForm:e=>{p.setUserInfo(e.title,e.subtitle)}});r.addEventListener("click",(()=>{b.open();const{name:e,job:t}=p.getUserInfo();n.value=e,i.value=t})),b.setEventListeners();const S=new s({modalSelector:"#img-create-modal",handleSubmitForm:e=>{const t={name:e.imgTitle,link:e.imgURL,alt:e.imgTitle};m="prepend",h(t)}});c.addEventListener("click",(()=>{S.open()})),S.setEventListeners(),fetch("https://jsonplaceholder.typicode.com/posts",{headers:{authorization:"c56e30dc-2883-4270-a59e-b2f7bae969c6"}}).then((e=>e.json())).then((e=>{console.log(e)})).catch((e=>{console.error("Error fetching data:",e)}));const g={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button:disabled",inputInvalidClass:"modal__input_invalid",inputErrorClass:"modal__error",errorClass:"modal__error_visible"};new e(g,l).enableValidation(),new e(g,a).enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,